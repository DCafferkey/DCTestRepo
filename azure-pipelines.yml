# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

schedules:
- cron: "0 2 * * *" # Runs at 2:00 AM UTC every day
  displayName: "Nightly build"
  branches:
    include:
    - main
  always: true

variables:
  sqlServerName: '$(SQL_SERVER_NAME)'
  sqlDatabaseName: '$(SQL_DATABASE_NAME)'
  sqlUser: '$(SQL_USER)'
  sqlPassword: '$(SQL_PASSWORD)'
  scriptsFolder: '$(DacPacPath)'

pool:
  vmImage: 'windows-latest'

stages:
  - stage: GetDacPac
    displayName: "Extract Dacpac file from database"
    jobs:
      #- job: Export
       # steps:
          #- task: SqlAzureDacpacExport@1  - this is not available, but would be good to install
        #  - task: PowerShell@2
        #    displayName: "Extract DacPac using SqlPackage via Powershell"
        #    inputs:
        #      targetType: 'inline'
        #      script: |
        #        Write-Host "Extracting DACPAC."
        #        sqlpackage /Action:Export `
        #          /SourceServerName:$(SQL_SERVER_NAME) `
        #          /SourceDatabasename:$(SQL_DATABASE_NAME) `
        #          /SourceUser:$(SQL_USER) `
        #          /SourcePassword:$(SQL_PASSWORD) `
        #          /targetFile:$(DacPacPath) `
        #  - publish: '$(Build.ActiveStagingDirectory)'
        #    artifact: dacpac
      - job: Build
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: NuGetAuthenticate@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'

          - task: VSBuild@1
            displayName: 'Build SQL project'
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:Configuration=$(configuration)'
              platform: 'Any CPU'
              configuration: '$(configuration)'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '**/bin/$(configuration)/*.dacpac'
              artifactname: dacpac